IF OBJECT_ID(N'dbo.HISTORY_PRODUCT') IS NOT NULL
	DROP TABLE HISTORY_PRODUCT
GO
IF OBJECT_ID(N'dbo.HISTORIES') IS NOT NULL
	DROP TABLE HISTORIES
GO
IF OBJECT_ID(N'dbo.HISTORY_TYPES') IS NOT NULL
	DROP TABLE HISTORY_TYPES
GO
IF OBJECT_ID(N'dbo.WAREHOUSE_PRODUCT') IS NOT NULL
	DROP TABLE WAREHOUSE_PRODUCT
GO
IF OBJECT_ID(N'dbo.WAREHOUSES') IS NOT NULL
	DROP TABLE WAREHOUSES
GO
IF OBJECT_ID(N'dbo.LOCATIONS') IS NOT NULL
	DROP TABLE LOCATIONS
GO
IF OBJECT_ID(N'secure.PRODUCTS') IS NOT NULL
	DROP TABLE secure.PRODUCTS
GO
IF OBJECT_ID(N'secure.PRODUCT_CATEGORIES') IS NOT NULL
	DROP TABLE secure.PRODUCT_CATEGORIES
GO

IF EXISTS (SELECT * FROM sys.schemas WHERE name = 'secure')
	DROP SCHEMA secure;
GO
CREATE SCHEMA secure
Go

CREATE TABLE secure.PRODUCT_CATEGORIES (
	ID INT IDENTITY(1,1) NOT NULL,

	NAME NVARCHAR(100) NOT NULL,
	IS_DELETED BIT NOT NULL DEFAULT 0,

	CONSTRAINT PK_PRODUCT_CATEGORY_ID PRIMARY KEY CLUSTERED (ID)
)
GO

CREATE TABLE secure.PRODUCTS (
	ID INT IDENTITY(1,1) NOT NULL,

	NAME VARCHAR(100) NOT NULL,
	PRICE MONEY NOT NULL DEFAULT 0,

	PRODUCT_CATEGORY_ID INT NOT NULL,
	IS_DELETED BIT NOT NULL DEFAULT 0,

	CONSTRAINT PK_PRODUCT_ID PRIMARY KEY CLUSTERED (ID),
	CONSTRAINT FK_PRODUCT_PRODUCT_CATEGORY FOREIGN KEY (PRODUCT_CATEGORY_ID) 
		REFERENCES secure.PRODUCT_CATEGORIES (ID)
		ON DELETE CASCADE
		ON UPDATE CASCADE,

	CONSTRAINT CHK_PRODUCT_PRICE
		CHECK (PRICE > 0)
)
GO

CREATE TABLE LOCATIONS (
	ID INT IDENTITY(1,1) NOT NULL,
	
	COUNTRY_CODE NVARCHAR(100) NOT NULL,
	LOCATION_1 NVARCHAR(100) NULL,
	LOCATION_2 NVARCHAR(100) NULL,
	LOCATION_3 NVARCHAR(100) NULL,

	CONSTRAINT PK_LOCATION_ID PRIMARY KEY CLUSTERED (ID),
)

ALTER TABLE LOCATIONS
ADD LOCATION_4 NVARCHAR(100) NULL

GO
CREATE TABLE WAREHOUSES (
	ID INT IDENTITY(1,1) NOT NULL,

	NAME NVARCHAR(100) NOT NULL,
	LOCATION_ID INT NOT NULL,

	CONSTRAINT PK_WAREHOUSE_ID PRIMARY KEY CLUSTERED (ID),
	CONSTRAINT FK_WAREHOUSE_LOCATION_ID FOREIGN KEY (LOCATION_ID)
		REFERENCES LOCATIONS (ID)
		ON DELETE NO ACTION
		ON UPDATE CASCADE,
)
GO

GO
CREATE TABLE HISTORY_TYPES (
	ID INT IDENTITY(1,1) NOT NULL,

	NAME VARCHAR(100) NOT NULL,

	CONSTRAINT PK_HISTORY_TYPE_ID PRIMARY KEY CLUSTERED (ID),
)
GO

INSERT INTO HISTORY_TYPES(NAME)
VALUES ('SUPPLIES'),('SALES')
GO

CREATE TABLE HISTORIES (
	ID INT IDENTITY(1,1) NOT NULL,
	
	DATE DATETIME NOT NULL DEFAULT GETDATE(),
	HISTORY_TYPE_ID INT NOT NULL,
	IS_DELETED BIT NOT NULL DEFAULT 0,
	
	CONSTRAINT PK_HISOTRY_ID PRIMARY KEY CLUSTERED (ID),
	CONSTRAINT FK_HISTORY_HISTORY_TYPE_ID FOREIGN KEY (HISTORY_TYPE_ID)
		REFERENCES HISTORY_TYPES (ID)
		ON DELETE NO ACTION
		ON UPDATE CASCADE,
)
GO
CREATE TABLE HISTORY_PRODUCT (
	HISTORY_ID INT NOT NULL,
	PRODUCT_ID INT NOT NULL,
	WAREHOUSE_ID INT NOT NULL,

	COUNT INT NOT NULL DEFAULT 0,

	CONSTRAINT PK_HISTORY_PRODUCT PRIMARY KEY CLUSTERED (HISTORY_ID, PRODUCT_ID, WAREHOUSE_ID),
	CONSTRAINT FK_HISTORY_PRODUCT_HISTORY_ID FOREIGN KEY (HISTORY_ID)
		REFERENCES HISTORIES (ID)
		ON DELETE NO ACTION
		ON UPDATE CASCADE,
	CONSTRAINT FK_HISTORY_PRODUCT_PRODUCT_ID FOREIGN KEY (PRODUCT_ID)
		REFERENCES secure.PRODUCTS (ID) 
		ON DELETE NO ACTION
		ON UPDATE CASCADE,
)
GO
CREATE TABLE WAREHOUSE_PRODUCT (
	WAREHOUSE_ID INT NOT NULL,
	PRODUCT_ID INT NOT NULL,

	CONSTRAINT PK_WAREHOUSE_PRODUCT_I PRIMARY KEY CLUSTERED (WAREHOUSE_ID, PRODUCT_ID),
	CONSTRAINT FK_WAREHOUSE_PRODUCT_WAREHOUSE_ID FOREIGN KEY (WAREHOUSE_ID)
		REFERENCES WAREHOUSES (ID)
		ON DELETE NO ACTION
		ON UPDATE CASCADE,
	CONSTRAINT FK_WAREHOUSE_PRODUCT_PRODUCT_ID FOREIGN KEY (PRODUCT_ID)
		REFERENCES secure.PRODUCTS (ID) 
		ON DELETE NO ACTION
		ON UPDATE CASCADE,
)

ALTER TABLE WAREHOUSE_PRODUCT
	ADD COUNT INT NOT NULL DEFAULT 0;

GO
