CREATE OR ALTER FUNCTION GET_STATISTICS (
	@FROM_DATE DATE,
	@TO_DATE DATE
	)
RETURNS TABLE
AS 
RETURN (
	SELECT H.ID AS HISTORY, H.DATE, ABS(HP.COUNT) AS COUNT, P.ID AS PRODUCT_ID, P.NAME AS PRODUCT, P.PRICE, PC.NAME AS CATEGORY, PC.ID AS CATEGORY_ID
	FROM HISTORIES AS H
	JOIN HISTORY_TYPES AS HT ON HT.ID = H.HISTORY_TYPE_ID
	JOIN HISTORY_PRODUCT AS HP ON HP.HISTORY_ID = H.ID
	JOIN PRODUCTS AS P ON P.ID = HP.PRODUCT_ID
	JOIN PRODUCT_CATEGORIES PC ON PC.ID = P.PRODUCT_CATEGORY_ID
	JOIN WAREHOUSES AS W ON W.ID = HP.WAREHOUSE_ID
	JOIN LOCATIONS AS L ON L.ID = W.LOCATION_ID
	WHERE H.DATE BETWEEN @FROM_DATE AND @TO_DATE
)

GO

CREATE OR ALTER FUNCTION GET_STATISTICS_CATEGORY (
	@FROM_DATE DATE,
	@TO_DATE DATE)
RETURNS TABLE
AS
RETURN
	SELECT TOP(1) WITH TIES CATEGORY_ID, CATEGORY, SUM(COUNT) AS TOTAL_COUNT
	FROM GET_STATISTICS(@FROM_DATE, @TO_DATE)
	GROUP BY CATEGORY_ID, CATEGORY
	ORDER BY SUM(COUNT)

GO

CREATE OR ALTER FUNCTION GET_STATISTICS_CATEGORY_PRICE (
	@FROM_DATE DATE,
	@TO_DATE DATE)
RETURNS TABLE
AS
RETURN
	SELECT TOP(1) WITH TIES CATEGORY_ID, CATEGORY, SUM(COUNT*PRICE) AS TOTAL_SUM
	FROM GET_STATISTICS(@FROM_DATE, @TO_DATE)
	GROUP BY CATEGORY_ID, CATEGORY
	ORDER BY SUM(COUNT*PRICE)

GO

CREATE OR ALTER FUNCTION GET_STATISTICS_PRODUCTS (
	@FROM_DATE DATE,
	@TO_DATE DATE)
RETURNS TABLE
AS
RETURN
	SELECT PRODUCT, CATEGORY, SUM(COUNT) AS TOTAL_COUNT
	FROM GET_STATISTICS(@FROM_DATE, @TO_DATE)
	GROUP BY PRODUCT_ID, PRODUCT, CATEGORY
GO

--SELECT * FROM HISTORIES
--SELECT * FROM GET_STATISTICS('2022-05-13 00:00:00.000', '2022-05-16 00:00:00.000')
--SELECT * FROM GET_STATISTICS_CATEGORY('2022-05-13 00:00:00.000', '2022-05-16 00:00:00.000')
--SELECT * FROM GET_STATISTICS_CATEGORY_PRICE('2022-05-13 00:00:00.000', '2022-05-16 00:00:00.000')
--SELECT * FROM GET_STATISTICS_PRODUCTS('2022-05-13 00:00:00.000', '2022-05-16 00:00:00.000')
SELECT * FROM GET_STATISTICS_PRODUCTS('2022-05-13 00:00:00.000', '2022-05-16 00:00:00.000')

